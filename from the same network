#include <ESP8266WiFi.h>
 
const char* ssid = "network name";
const char* password = "password";

#include <Servo.h>
#include <Keypad.h>

const byte row = 4;
const byte col = 4;

char keys[row][col]={
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowpin[row]={12,11,10,9};
byte colpin[col]={8,7,6,5};

Keypad kpd(makeKeymap(keys),rowpin,colpin,row,col);
Servo servo;

int in1=D5;
int in2=D6;
int in3=D7;
int in4=D8;

char StorePass[]="123123";
int i=0,count=0,number=sizeof(StorePass)-1;
char pass[sizeof(StorePass)-1];

WiFiServer server(80);

void setup(){
  
Serial.begin(115200);
delay(10);
pinMode(in1, OUTPUT);
pinMode(in2, OUTPUT);
pinMode(in3, OUTPUT);
pinMode(in4, OUTPUT);

digitalWrite(in1, LOW);
digitalWrite(in2, LOW);
digitalWrite(in3, LOW);
digitalWrite(in4, LOW);

Serial.println();
Serial.println();
Serial.print("Connecting to ");
Serial.println(ssid);

WiFi.begin(ssid, password);
while (WiFi.status() != WL_CONNECTED) {
delay(500);
Serial.print(".");
}
Serial.println("");
Serial.println("WiFi connected");

server.begin();
Serial.println("Server started");
Serial.print("Use this URL to connect: ");
Serial.print("http://");
Serial.print(WiFi.localIP());
Serial.println("/");

}

void loop() {
WiFiClient client = server.available();
if (!client) {
return;
}
Serial.println("new client");

client.println("HTTP/1.1 200 OK");
client.println("Content-Type: text/html");
client.println("");

client.println("<!DOCTYPE HTML>");
client.println("<html>");
client.println("<head>");
client.println("<title>First Project</title>");
client.println("<meta charset=\"utf-8\">");
client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
client.println("<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">");
client.println("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js\"></script>");
client.println("<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>");
client.println("</head>");

client.println("<body>");

client.print("<h1>SMART HOME smart arabic projects</h1>");

client.println("<div class=\"container\">");
client.print("<h1>device1</h1>");
client.print("<p class=\"text-danger\">on-off Button:</p>"); 
client.print("<a href=\"/dev1on\" class=\"btn btn-success\" role=\"button\">ON</a>");
client.print("<a href=\"/dev1of\" class=\"btn btn-danger\" role=\"button\">OFF</a>");

client.println("</div>");
client.println("<div class=\"container\">");
client.print("<h1>device2</h1>");

client.print("<a href=\"/dev2on\" class=\"btn btn-success\" role=\"button\">ON</a>");
client.print("<a href=\"/dev2of\" class=\"btn btn-danger\" role=\"button\">OFF</a>");
client.println("</div>");

client.println("<div class=\"container\">");
client.print("<h1>device3</h1>");

client.print("<a href=\"/dev3on\" class=\"btn btn-success\" role=\"button\">ON</a>");
client.print("<a href=\"/dev3of\" class=\"btn btn-danger\" role=\"button\">OFF</a>");
client.println("</div>");

client.println("<div class=\"container\">");
client.print("<h1>device4</h1>");

client.print("<a href=\"/dev4on\" class=\"btn btn-success\" role=\"button\">ON</a>");
client.print("<a href=\"/dev4of\" class=\"btn btn-danger\" role=\"button\">OFF</a>");

client.print("<br><br>");
client.println("</div>");
client.print("<h1>design by bilal hassan</h1>");

client.println("</body>");
client.println("</html>");

while(!client.available()){
delay(1);
}

String request = client.readStringUntil('\r');
Serial.println(request);
client.flush();

if (request.indexOf('/dev1on') != -1) {
digitalWrite(in1, HIGH);
}
if (request.indexOf('/dev1of') != -1) {
digitalWrite(in1, LOW);
}
if (request.indexOf('/dev2on') != -1) {
digitalWrite(in2, HIGH);
}
if (request.indexOf('/dev2of') != -1) {
digitalWrite(in2, LOW);
}
if (request.indexOf('/dev3on') != -1) {
digitalWrite(in3, HIGH);
}
if (request.indexOf('/dev3of') != -1) {
digitalWrite(in3, LOW);
}
if (request.indexOf('/dev4on') != -1) {
digitalWrite(in4, HIGH);
}
if (request.indexOf('/dev4of') != -1) {
digitalWrite(in4, LOW);
}
delay(1);
Serial.println("Client disonnected");
Serial.println("");

key_sec();

}

void key_sec(){
 char key = kpd.getKey();
  if (key>'0'&&key!='D'){
    pass[i]=key;
    i++;
  }
  if(key=='D'){
    if(i==number){
      for(int j=0;j<number;j++){
        if(pass[j]==StorePass[j])count++;
      }
      if(count==number){
        servo.write(165);
        delay(2000);
        i=0;
        count=0;
      }
    }
  }
  servo.write(5);
}
